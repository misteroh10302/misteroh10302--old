/*  jQuery Nice Select - v1.0
    https://github.com/hernansartorio/jquery-nice-select
    Made by Hern√°n Sartorio  */
! function(e) {
    e.fn.niceSelect = function(t) {
        function s(t) {
            t.after(e("<div></div>").addClass("nice-select").addClass(t.attr("class") || "").addClass(t.attr("disabled") ? "disabled" : "").attr("tabindex", t.attr("disabled") ? null : "0").html('<span class="current"></span><ul class="list"></ul>'));
            var s = t.next(),
                n = t.find("option"),
                i = t.find("option:selected");
            s.find(".current").html(i.data("display") || i.text()), n.each(function(t) {
                var n = e(this),
                    i = n.data("display");
                s.find("ul").append(e("<li></li>").attr("data-value", n.val()).attr("data-display", i || null).addClass("option" + (n.is(":selected") ? " selected" : "") + (n.is(":disabled") ? " disabled" : "")).html(n.text()))
            })
        }
        if ("string" == typeof t) return "update" == t ? this.each(function() {
            var t = e(this),
                n = e(this).next(".nice-select"),
                i = n.hasClass("open");
            n.length && (n.remove(), s(t), i && t.next().trigger("click"))
        }) : "destroy" == t ? (this.each(function() {
            var t = e(this),
                s = e(this).next(".nice-select");
            s.length && (s.remove(), t.css("display", ""))
        }), 0 == e(".nice-select").length && e(document).off(".nice_select")) : console.log('Method "' + t + '" does not exist.'), this;
        this.hide(), this.each(function() {
            var t = e(this);
            t.next().hasClass("nice-select") || s(t)
        }), e(document).off(".nice_select"), e(document).on("click.nice_select", ".nice-select", function(t) {
            var s = e(this);
            if (s.hasClass('filter-select')) {
                e(".nice-select").not(s), s.addClass("open"), s.hasClass("filter-select") ? (s.find(".option"), s.find(".focus").removeClass("focus"), s.find(".selected").addClass("focus")) : s.focus()

            } else {
                e(".nice-select").not(s).removeClass("open"), s.toggleClass("open"), s.hasClass("open") ? (s.find(".option"), s.find(".focus").removeClass("focus"), s.find(".selected").addClass("focus")) : s.focus()

            }
        }), e(document).on("click.nice_select", function(t) {

                // 0 === e(t.target).closest(".nice-select").length && e(".nice-select").removeClass("open").find(".option")

            0 === e(t.target).closest(".nice-select").length && e(".nice-select").find(".option")


        }), e(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function(t) {
            var s = e(this),
                n = s.closest(".nice-select");
            n.find(".selected").removeClass("selected"), s.addClass("selected");
            var i = s.data("display") || s.text();
            if ($('body').hasClass("template-collection")) {
            	$('.apply').on('click',function(){
            		n.find(".current").text(i), n.prev("select").val(s.data("value"));
		        	n.prev("select").val(s.data("value")).trigger('change');
		        });
                n.find(".current").text(i), n.prev("select").val(s.data("value"));

                /// if this item is part of the color list...
                // console.log(s.parent().parent());
                if (s.parent().parent().hasClass('size-select')) {
                  // check to see if the next value SIZE has been chosen
                    var sizeVal = n.next().next().next().find('.current')[0].innerHTML;
                    var theSize = "Size";
                    if (sizeVal.trim() == theSize ) {
                    }  else {
                        // find the currentForm
                        var variantArrayNice = new Array();
                        var currentPform = n.parent('form');
                        // Make an Array from the values in the crurrent form to find
                        // One that is sold
                        n.parent('form').find('.product-single__variants .list li').each(function(){
                            variantArrayNice.push({
                                    "VariantNice" :$(this)[0].innerHTML,
                                    "VariantIDNice" : $(this).attr('data-value')
                                });
                        });

                        // Find the users current inpit
                        var colorVal = $(currentPform).find('.size .current')[0].innerHTML;
                        var sizeVal =  $(currentPform).find('.color .current')[0].innerHTML;
                        var ColorVarStrip = $.trim(colorVal);
                        var theUserValue = ColorVarStrip + " / " + sizeVal;

                        // Run through the list of Variants
                            for (x=0;x<variantArrayNice.length;x++) {

                                if (theUserValue +' - Sold Out' === variantArrayNice[x].VariantNice) {
                                    n.parent('form').siblings('#notInStockHover').remove();

                                    // Disable the add to cart button
                                    n.parent('form').next(".AjaxCart").removeClass('enableButton');
                                     n.parent('form').next(".AjaxCart").html('Out of Stock');
                                    // Creat the not in stock form
                                    n.parent('form').before('<div id="notInStockHover"><label for="email"> email </label><input type="email" class="notify_email_hover"><button class="sendMeHover">Notify Me</button></div>');
                                    var productID = n.parent('form').attr('p-id');
                                    var variantID = variantArrayNice[x].VariantIDNice;
                                    n.parent('form').siblings('#notInStockHover').find('.sendMeHover').on('click',function(){
                                     var email = $(this).siblings('.notify_email_hover').val();

                                     if (email === "") {
                                        $(this).html('Enter email.');
                                        return;
                                     } else {
                                        BIS.create(email, variantID, productID);
                                        $(this).html('Thank you!');
                                        $(this).parent().parent().parent('.hoverCaption').delay(700).fadeOut();
                                     }

                                  });
                                return;

                                }
                                 else if (theUserValue === variantArrayNice[x].VariantNice) {
                                    n.parent('form').siblings('#notInStockHover').remove();

                                    n.parent('form').next(".AjaxCart").html('Add To Cart');
                                    n.parent('form').next(".AjaxCart").addClass('enableButton');
                                    return;

                                } else {
                                    n.parent('form').siblings('#notInStockHover').remove();


                                     n.parent('form').next(".AjaxCart").html('Out of Stock');
                                    // Disable the add to cart button
                                    n.parent('form').next(".AjaxCart").removeClass('enableButton');
                                    // Creat the not in stock form
                                    n.parent('form').before('<div id="notInStockHover"><label for="email"> email </label><input type="email" class="notify_email_hover"><button class="sendMeHover">Notify Me</button></div>');
                                    var productID = n.parent('form').attr('p-id');
                                    var variantID = variantArrayNice[x].VariantIDNice;
                                    n.parent('form').siblings('#notInStockHover').find('.sendMeHover').on('click',function(){
                                    var email = $(this).siblings('.notify_email_hover').val();
                                     if (email === "") {
                                        $(this).html('Enter email.');
                                        return;
                                     } else {
                                        BIS.create(email, variantID, productID);
                                        $(this).html('Thank you!');
                                        $(this).parent().parent().parent('.hoverCaption').delay(700).fadeOut();
                                     }

                                  });
                                }

                            }

                    }
                }

                /// if this item is part of the size list...
               else if (s.parent().parent().hasClass('color-select')) {
                    var colorVal = n.parent().parent().parent().find('.current')[0].innerHTML;
                    // console.log(colorVal);
                    var theColor = "color";
                    if (colorVal.trim() == theColor ) {

                    } else {

                        // find the currentForm
                        var variantArrayNice = new Array();
                        var currentPform = n.parent('form');
                        // Make an Array from the values in the crurrent form to find
                        // One that is sold
                        n.parent('form').find('.product-single__variants .list li').each(function(){
                            variantArrayNice.push({
                                    "VariantNice" :$(this)[0].innerHTML,
                                    "VariantIDNice" : $(this).attr('data-value')
                                });
                        });

                        // Find the users current inpit
                        var colorVal = $(currentPform).find('.size .current')[0].innerHTML;
                        var sizeVal =  $(currentPform).find('.color .current')[0].innerHTML;
                        var ColorVarStrip = $.trim(colorVal);
                        var theUserValue = ColorVarStrip + " / " + sizeVal;

                        // Run through the list of Variants
                            for (x=0;x<variantArrayNice.length;x++) {
                                if (theUserValue +' - Sold Out' === variantArrayNice[x].VariantNice ) {
                                    console.log(n.parent('form').next(".AjaxCart"));
                                    n.parent('form').next(".AjaxCart").removeClass('enableButton');
                                      n.parent('form').siblings('#notInStockHover').remove();

                                    // Disable the add to cart button
                                    n.parent('form').next(".AjaxCart").removeClass('enableButton');
                                     n.parent('form').next(".AjaxCart").html('Out of Stock');
                                    // Creat the not in stock form
                                    n.parent('form').before('<div id="notInStockHover"><label for="email"> email </label><input type="email" class="notify_email_hover"><button class="sendMeHover">Notify Me</button></div>');
                                    var productID = n.parent('form').attr('p-id');
                                    var variantID = variantArrayNice[x].VariantIDNice;
                                    n.parent('form').siblings('#notInStockHover').find('.sendMeHover').on('click',function(){
                                     var email = $(this).siblings('.notify_email_hover').val();

                                     if (email === "") {
                                        $(this).html('Enter email.');
                                        return;
                                     } else {
                                        BIS.create(email, variantID, productID);
                                        $(this).html('Thank you!');
                                        $(this).parent().parent().parent('.hoverCaption').delay(700).fadeOut();
                                     }

                                  });
                                     return;
                                } else if (theUserValue === variantArrayNice[x].VariantNice) {
                                     n.parent('form').siblings('#notInStockHover').remove();
                                     n.parent('form').next(".AjaxCart").removeClass('enableButton');
                                    n.parent('form').next(".AjaxCart").html('Add To Cart');
                                    n.parent('form').next(".AjaxCart").addClass('enableButton');
                                    return;

                                } else {
                                     n.parent('form').siblings('#notInStockHover').remove();

                                    n.parent('form').next(".AjaxCart").html('Out of Stock');
                                    // Disable the add to cart button
                                    n.parent('form').next(".AjaxCart").removeClass('enableButton');

                                    // Creat the not in stock form
                                    n.parent('form').before('<div id="notInStockHover"><label for="email"> email </label><input type="email" class="notify_email_hover"><button class="sendMeHover">Notify Me</button></div>');
                                    var productID = n.parent('form').attr('p-id');
                                    var variantID = variantArrayNice[x].VariantIDNice;
                                    n.parent('form').siblings('#notInStockHover').find('.sendMeHover').on('click',function(){
                                     var email = $(this).siblings('.notify_email_hover').val();

                                     if (email === "") {
                                        $(this).html('Enter email.');
                                        return;
                                     } else {
                                        BIS.create(email, variantID, productID);
                                        $(this).html('Thank you!');
                                        $(this).parent().parent().parent('.hoverCaption').delay(700).fadeOut();
                                     }
                                  });
                                }

                            }

                    }
               }


            } else {
              function toTitleCase(str) {
                  return str.replace(/(?:^|\s)\w/g, function(match) {
                      return match.toUpperCase();
                  });
              }

                var newClass = s.data('value');
                n.find(".current").attr('class','current');
                n.find(".current").addClass(newClass.toLowerCase());
             	n.find(".current").text(i), n.prev("select").val(s.data("value")).trigger('change');
                n.find('.list li').each(function(){

                    var theNewClass = newClass.toLowerCase();
                    var theNewClassTitle = toTitleCase(newClass);
                    var theNewClassCap = newClass.toUpperCase();


                    if($(this).attr('data-value')===theNewClass || $(this).attr('data-value')===theNewClassCap || $(this).attr('data-value')===theNewClassTitle ){
                        $(this).hide();

                    } else {
                        $(this).show();
                    }
                });
                // console.log(s.data("value"));
            }

        }), e(document).on('click',function(t){
            // if($(t.target).hasClass('.nice-select')) {
            //   $(this).addClass('open');
            // }  else {
            //       $('.nice-select').each(function(){
            //         if ($(this).hasClass('open')) {
            //            $(this).removeClass('open');
            //         }
            //     });
            // }

        }),e(document).on("keydown.nice_select", ".nice-select", function(t) {
            // var s = e(this),
            //     n = e(s.find(".focus") || s.find(".list .option.selected"));
            // if (32 == t.keyCode || 13 == t.keyCode) return s.hasClass("open") ? n.trigger("click") : s.trigger("click"), !1;
            // if (40 == t.keyCode) {
            //     if (s.hasClass("open")) {
            //         var i = n.nextAll(".option:not(.disabled)").first();
            //         i.length > 0 && (s.find(".focus").removeClass("focus"), i.addClass("focus"))
            //     } else s.trigger("click");
            //     return !1
            // }
            // if (38 == t.keyCode) {
            //     if (s.hasClass("open")) {
            //         var l = n.prevAll(".option:not(.disabled)").first();
            //         l.length > 0 && (s.find(".focus").removeClass("focus"), l.addClass("focus"))
            //     } else s.trigger("click");
            //     return !1
            // }
            // if (27 == t.keyCode) s.hasClass("open") && s.trigger("click");
            // else if (9 == t.keyCode && s.hasClass("open")) return !1
        });
        var n = document.createElement("a").style;

        return n.cssText = "pointer-events:auto", "auto" !== n.pointerEvents && e("html").addClass("no-csspointerevents"), this
    }
}(jQuery);
