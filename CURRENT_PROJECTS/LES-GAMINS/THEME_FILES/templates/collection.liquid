
{% paginate collection.products by 48 %}
 {% if settings.product_breadcrumbs %}
      <div class="wrapper">{% include 'breadcrumb' %}</div>
    {% endif %}

{% if collection.image %}

  <div class="collection-image" style="background-image: url('{{ collection.image | img_url: '2048x2048' }}');"> {% endif %}
    <div class="collection-title text-center">
        <div class="grid">
          <h1 class="collection-text--headline title grid__item one-whole">{{ collection.title }}</h1>
          {% if collection.description.size > 0 %}
            <div class="collection-text--body text-center rte grid__item large--three-fifths push--large--one-fifth">
              <p class="h4--body">{{ collection.description }}</p>
            </div>
          {% endif %}
        </div>
    </div>
    {% if collection.image %}<div class="collection-image-overlay"></div>
  </div>


  <div class="collection-image-mobile" > {% endif %}
    <div class="collection-title text-center">
        <div class="grid">
          <h1 class="collection-text--headline title grid__item one-whole">{{ collection.title }}</h1>
          {% if collection.description.size > 0 %}
            <div class="collection-text--body text-center rte grid__item large--three-fifths push--large--one-fifth">
              <p class="h4--body mobile-image">{{ collection.description }}</p>
            </div>
          {% endif %}
        </div>
    </div>
    {% if collection.image %}<div class="collection-image-overlay"></div>
  </div>


  <div class="collection-image-large" > {% endif %}
    <div class="collection-title text-center">
        <div class="grid">
          <h1 class="collection-text--headline title grid__item one-whole">{{ collection.title }}</h1>
          {% if collection.description.size > 0 %}
            <div class="collection-text--body text-center rte grid__item large--three-fifths push--large--one-fifth">
              <p class="h4--body mobile-image">{{ collection.description }}</p>
            </div>
          {% endif %}
        </div>
    </div>
    {% if collection.image %}<div class="collection-image-overlay"></div>
  </div>
{% endif %}

<div class="wrapper">


   {% if settings.collection_sorting %}
  <div class="row text-left collection__sort mobile-sort">
    <div class="filter-dropdown-mobile">
      Filter by
      <span class="caret">
        <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
      </span>
    </div>
    <div id="collection-multi-filter-mobile">
      <div class="filter-mobile-by">
        <div class="title">Filter By</div>
        <div class="mobile-filter-close">X</div>
      </div>

  <!-- custom filter tool -->

      {% assign tags = 'Red, Green, Blue, Grey, White, Yellow, Multi' | split: ',' %}
       <label class="open-custom">
          Color <span class="caret">
              <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
            </span>
          </label>
        <div class="custom-filter">
           <div class="mobile-label">
              <input type="checkbox" id="all-color" value=""></input>
              <label class="{{tag}}" for="all-color">All</label>
         </div>
          <span class="addtosearch">
            {% for t in tags %}
            {% assign tag = t | strip %}
            {% if current_tags contains tag %}
           <div class="mobile-label">
               <input type="checkbox" id="{{tag}}" name="{{tag}}" value="{{tag}}"></input>
              <label class="{{tag}}" for="{{tag}}">{{tag}}</label>
           </div> <!--  <option value="{{ tag | handle }}" selected>{{ tag }}</option> -->
            {% elsif collection.all_tags contains tag %}
            <div class="mobile-label">
              <input type="checkbox" value="{{tag}}" id="{{tag}}" name="{{tag}}"></input>
               <label class="{{tag}}" for="{{tag}}" >{{tag}}</label>
            </div>
            {% endif %}
          {% endfor %}
        </span>
        </div>
      {% assign tags = '3M, 6M, 12M, 18M, 24M, 2T, 3T' | split: ',' %}
        <label class="open-custom">
          Size
          <span class="caret">
              <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
            </span>
        </label>
        <div class="custom-filter">
           <div class="mobile-label">
               <input type="checkbox" id="all-size" value=""></input>
              <label for="all-size">All</label>
           </div>
          <span class="addtosearch">
            {% for t in tags %}
            {% assign tag = t | strip %}
           {% if current_tags contains tag %}
           <div class="mobile-label">
              <input type="checkbox" id="{{tag}}" name="{{tag}}" value="{{tag}}"></input>
              <label class="{{tag}}" for="{{tag}}">{{tag}}</label>
          </div>
           <!--  <option value="{{ tag | handle }}" selected>{{ tag }}</option> -->
            {% elsif collection.all_tags contains tag %}
             <div class="mobile-label">
                <input type="checkbox" value="{{tag}}" id="{{tag}}" name="{{tag}}"></input>
                <label class="{{tag}}" for="{{tag}}" >{{tag}}</label>
              </div>
            {% endif %}
           {% endfor %}
          </span>
        </div>

       <div class="apply-mobile">
          <button class="sure">APPLY</button>
       </div>



        <!-- end custom filter tool -->
  </div>

  </div>
  {% endif %}

  {% if settings.collection_sorting %}
  <div class="row text-right collection__sort">
    <div class="filter-dropdown">
      Filter by
      <span class="caret">
        <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
      </span>
    </div>

    <div style="display:none;" class="collection-filters-container cf-select-wrapper"></div>

    <div id="collection-multi-filter">

  <!-- custom filter tool -->

      {% assign tags = 'Red, Green, Blue, Grey, White, Yellow, Multi' | split: ',' %}
        <label class="open-custom">
          Color <span class="caret">
              <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
            </span>
          </label>
        <div class="custom-filter">
          <label class="{{tag}}-desk" for="all-color">All</label>
          <input type="checkbox" id="all-color-desk" value=""></input>
          <span class="addtosearch">
            {% for t in tags %}
            {% assign tag = t | strip %}
            {% if current_tags contains tag %}
              <label class="{{tag}}" for="{{tag}}-desk">{{tag}}</label>
              <input type="checkbox" id="{{tag}}-desk" name="{{tag}}-desk" value="{{tag}}"></input>
           <!--  <option value="{{ tag | handle }}" selected>{{ tag }}</option> -->
            {% elsif collection.all_tags contains tag %}
               <label class="{{tag}}" for="{{tag}}-desk" >{{tag}}</label>
                <input type="checkbox" value="{{tag}}" id="{{tag}}-desk" name="{{tag}}"></input>
            {% endif %}
          {% endfor %}
        </span>
        </div>
      {% assign tags = '3M, 6M, 12M, 18M, 24M, 2T, 3T' | split: ',' %}
        <label class="open-custom">
          Size
          <span class="caret">
              <img src="https://cdn.shopify.com/s/files/1/1381/5403/files/Screen_Shot_2017-01-06_at_2.59.44_PM.png?13102111488351803579" alt="down-caret">
            </span>
        </label>
        <div class="custom-filter">
            <label for="all-size-desk">All</label>
            <input type="checkbox" id="all-size-desk" value=""></input>

          <span class="addtosearch">
            {% for t in tags %}
            {% assign tag = t | strip %}
           {% if current_tags contains tag %}
              <label class="{{tag}}" for="{{tag}}-desk">{{tag}}</label>
              <input type="checkbox" id="{{tag}}-desk" name="{{tag}}" value="{{tag}}"></input>
           <!--  <option value="{{ tag | handle }}" selected>{{ tag }}</option> -->
            {% elsif collection.all_tags contains tag %}
               <label class="{{tag}}" for="{{tag}}-desk" >{{tag}}</label>
                <input type="checkbox" value="{{tag}}" id="{{tag}}-desk" name="{{tag}}"></input>
            {% endif %}
           {% endfor %}
          </span>
        </div>

        <button class="sure">APPLY</button>
         <button class="clear-filter">CLEAR</button>


        <!-- end custom filter tool -->
  </div>

  </div>
  {% endif %}
  <div class="page-margin grid--rev">
    {% if settings.collection_custom_nav_list != blank or settings.collection_standard_nav or settings.collection_type_nav or settings.collection_vendor_nav or settings.collection_tag_nav %}
    <div class="grid__item large--three-quarters">
    {% else  %}
    <div class="grid__item one-whole">
    {% endif %}

      <div class="grid-uniform">
        {% assign grid_width_large = {{settings.global_grid_width_large}} %}
        {% assign grid_width_medium = {{settings.global_grid_width_medium}} %}
        {% assign grid_width_small = {{settings.global_grid_width_small}} %}
        {% for product in collection.products %}

          {% for option in product.options %}
            {% if option == "Color" or option == "Colour" %}
              {% assign index = forloop.index0 %}
              {% assign colorlist = '' %}
              {% assign color = '' %}
              {% for variant in product.variants %}
                {% capture color %}
                  {{ variant.options[index] }}
                {% endcapture %}
                {% unless colorlist contains color %}
                  {% include 'product-rollover' %}
                  {% capture tempList %}
                    {{colorlist | append: color | append: ' '}}
                  {% endcapture %}
                  {% assign colorlist = tempList %}
                {% endunless %}
              {% endfor %}
            {% endif %}
          {% endfor %}


        {% else %}
          {% if collection.handle == 'all'%}
            {% unless emptyState %}
              {{ 'theme-onboarding.css' | asset_url | stylesheet_tag }}
              {% assign emptyState = true %}
            {% endunless %}
            {% include 'onboarding-empty-collection' %}
          {% else %}
          <div class="grid__item">
            <p>{{ 'collections.general.no_matches' | t }}</p>
          </div>
          {% endif %}
        {% endfor %}
      </div>
      {% if paginate.pages > 1 %}
      <hr>
      <div class="text-center">
        {% include 'pagination-custom' %}
      </div>
      {% endif %}
    </div>
    {% if settings.collection_custom_nav_list != blank or settings.collection_standard_nav or settings.collection_type_nav or settings.collection_vendor_nav or  settings.collection_tag_nav %}
    <div class="grid__item large--one-quarter">
      {% include 'collections-sidebar' %}
    </div>
    {% endif %}
  </div>
  {% endpaginate %}
</div>

<script>

// $('.clickMe').on('click',function(){
//   var theCurrentProduct = $(this).siblings('form').attr('value');
//   console.log(theCurrentProduct);
//   var product =
// });


  /* Product Tag Filters - Good for any number of filters on any type of collection page.
     Give you product tag filter select element a class of coll-filter.
     Give your collection select a class of coll-picker.
     Brought to you by Caroline Schnapp. */
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
  jQuery('.coll-picker').change(function() {
    if (jQuery(this).val()) {
      location.href = '/collections/' + jQuery(this).val();
    }
    else {
      location.href = '/collections/all';
    }
  });

  var collFilters = jQuery('.coll-filter');

  collFilters.change(function() {
    delete Shopify.queryParams.page;
    var newTags = [];
    collFilters.each(function() {
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    {% if collection.handle %}
    var newURL = '/collections/{{ collection.handle }}';
    if (newTags.length) {
      newURL += '/' + newTags.join('+');
    }
    var search = jQuery.param(Shopify.queryParams);
    if (search.length) {
      newURL += '?' + search;
    }
    location.href = newURL;
    {% else %}
    if (newTags.length) {
      Shopify.queryParams.constraint = newTags.join('+');
    }
    else {
      delete Shopify.queryParams.constraint;
    }
    location.search = jQuery.param(Shopify.queryParams);
    {% endif %}
  });

  var searchArray = new Array();

  $('.clear-filter').on('click',function(){
    {% if collection.handle %}
        var newURL = '/collections/{{ collection.handle }}';

        location.href = newURL;
      {% endif %}
  });


  $('.sure').on('click',function(){

    $('.addtosearch .search-param').each(function(){
        searchArray.push($(this).val());
    });


      {% if collection.handle %}
      var newURL = '/collections/{{ collection.handle }}';
      if (searchArray.length) {
        newURL += '/' + searchArray.join('+');
      }
      var search = jQuery.param(Shopify.queryParams);
      if (search.length) {
        newURL += '?' + search;
      }
      location.href = newURL;
      {% else %}
      if (newTags.length) {
        Shopify.queryParams.constraint = newTags.join('+');
      }
      else {
        delete Shopify.queryParams.constraint;
      }
      location.search = jQuery.param(Shopify.queryParams);
      {% endif %}
  });

  $('input:checkbox').change(function(){
      if($(this).is(":checked")) {
          $(this).prev('label').addClass('selected-query');
          $(this).addClass("search-param");
      } else {
        $(this).prev('label').removeClass('selected-query');
          $(this).removeClass("search-param");
      }
  });

  $('.open-custom').on('click',function(){
    $(this).next('.custom-filter').toggle();
  });

  $('.filter-dropdown').on('click',function(){
      $('#collection-multi-filter').slideToggle();
      $('#collection-multi-filter').toggleClass('filter-open');
  });

  $('.filter-dropdown-mobile').on('click',function(){
     $(document).scrollTop(0);
     $('body').css('position','fixed');
      $('#collection-multi-filter-mobile').toggleClass('filter-open');
      $('#collection-multi-filter-mobile').toggleClass('mobile-filter-open');

  });

  $('.mobile-filter-close').on('click',function(){
     $('body').css('position','initial');
      $('#collection-multi-filter-mobile').removeClass('filter-open');
      $('#collection-multi-filter-mobile').removeClass('mobile-filter-open');

  });

$(document).on('ready',function(){
  $('#collection-multi-filter .nice-select').addClass('filter-select');

});

  $('#collection-multi-filter').on('click','label',function(){
       $(this).next('select').next('.nice-select').slideToggle().addClass('open');
  });

  var mobileBanner = $('.mobile-image img').attr('src');

  $('.collection-image-mobile').css('background-image','url('+mobileBanner+')');


 var largeBanner = $('.collection-large-banner').attr('src');

  $('.collection-image-large').css('background-image','url('+largeBanner+')');


// Create a custom add to cart button for Ajax
// Grab the current elements single selector information and add it to the array as a string
// Grab the two new values that have been selected by the user
// Update the product select id with this variant
// Add this variant to the cart :)
var variantArray = new Array();
// $('.AjaxCart').on('click',function(){
$('.AjaxCart').on('click',function(e){
  e.preventDefault;
  if ($(e.target).hasClass('enableButton')) {
    var theForm = $(this).prev('form');
    Shopify.queue = [];
    if (theForm.hasClass('single-variant-form')) {
      var theVarid = $(this).next('.theProduct')[0].innerText;
      Shopify.queue.push( {variantId: theVarid,quantity: 1} );
      Shopify.moveAlong();
      $(this).parent('.hoverCaption').remove();
      $(this).html("Item added to cart!");
      $(this).parent().parent('.hoverCaption').delay(700).fadeOut();
    } else {
      var theColorVar = $(theForm).find('.size .current')[0].innerHTML;
      var theSizeVar =  $(theForm).find('.color .current')[0].innerHTML;
      var theColorVarStrip = $.trim(theColorVar);
      var theCompartive = theColorVarStrip + " / " + theSizeVar;
      $(theForm).find('.product-single__variants .list li').each(function(){
        variantArray.push({
            "Variant" :$(this)[0].innerHTML,
            "VariantID" : $(this).attr('data-value')
        });
      });
      for (x=0; x< variantArray.length; x++) {
        if (theCompartive === "color /  Size") {
           $(this).html("Add To Cart");
           return;
        }
        else if (variantArray[x].Variant === theCompartive) {
            var theNewId = $(theForm).find("#product-select")[0].value;
            theNewId = variantArray[x].VariantID;
            Shopify.queue.push( {variantId: theNewId, quantity: 1} );
            Shopify.moveAlong();
            $(this).parent('.hoverCaption').remove();
            $(this).html("Item added to cart!");
            $(this).parent().parent('.hoverCaption').delay(700).fadeOut();
            return theNewId;
            return;
        } else {
          $(this).html("Not in stock");
          $(this).siblings('form').attr('v-id',variantArray[x].VariantID);

        }

      }
      var isOutOfStock = $(this)[0].innerHTML;
      if (isOutOfStock === "Not in stock") {
         $(this).removeClass('enableButton');
          $(this).siblings('form').before('<div id="notInStockHover"><label for="email"> email </label><input type="email" class="notify_email_hover"><button class="sendMeHover">Notify Me</button></div>');
          var productID = $(this).siblings('form').attr('p-id');
          var variantID = $(this).siblings('form').attr('v-id');
          $(this).siblings('#notInStockHover').find('.sendMeHover').on('click',function(){

             var email = $(this).siblings('.notify_email_hover').val();
             if (email === "") {
                $(this).html('Enter email.');
                return;
             } else {
                BIS.create(email, variantID, productID);
                $(this).html('Thank you!');
                $(this).parent().parent().parent('.hoverCaption').delay(700).fadeOut();
             }

          });

      }

    }
  } else {
    return;
  }
  // console.log(variantArray);
});
$(document).on('ready',function(e){
  var $specialText = $('.collection-image .collection-text--body').find('blockquote');
  $specialText.wrap('<div>');
  $('.mobile-sort').before($specialText);
  // console.log($specialText);
   $(document).on('click',function(e){

    var theList = $('#collection-multi-filter');
      if ($(e.target).hasClass('filter-dropdown') ){
        $('#collection-multi-filter').css('display','block');
      } else if ($(e.target).hasClass('open-custom') ){
        $('#collection-multi-filter').css('display','block');
      }  else if ($(e.target).hasClass('custom-filter')){
        $('#collection-multi-filter').css('display','block');
      }else if ($(e.target.nodeName).is('LABEL')){
        $('#collection-multi-filter').css('display','block');
      } else if ($(e.target).hasClass('search-bar') ){
        $('#collection-multi-filter').css('display','none');
      } else if ($(e.target).hasClass('notify_email_hover') ){
        $('#collection-multi-filter').css('display','none');
      }else if ($(e.target).hasClass('input-group-field') ){
        $('#collection-multi-filter').css('display','none');
      }else if ($(e.target.nodeName).is('INPUT')){
        $('#collection-multi-filter').css('display','block');
      }
      else if ($(e.target.localName).is('input')){
        $('#collection-multi-filter').css('display','block');
      }else if (theList.hasClass('filter-open')){
        $('#collection-multi-filter').toggle();
        $('#collection-multi-filter').toggleClass('filter-open');
      }else if ($(e.target).hasClass('sendMeHover') ){
        $('#collection-multi-filter').css('display','none');
      }
    });

});

$(document).on('scroll',function(){
   if ($(document).scrollTop() > 350) {
        $('.mobile-sort').addClass('fix-filter');
        $('.site-header').css('box-shadow','none');
   }  else {
      $('.mobile-sort').removeClass('fix-filter');
   }
});



</script>
